load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load("@rules_jvm_external//:defs.bzl", "artifact")

java_test(
    name = "BazelDiffIntegrationTest",
    timeout = "long",
    srcs = [
        "BazelDiffIntegrationTest.java",
    ],
    data = [":bazel-diff"],
    env_inherit = ["CC"],
    tags = ["no-sandbox"],
    deps = [
        ":tests",
        ":util",
        artifact("com.google.guava:guava"),
        artifact("com.google.code.findbugs:jsr305"),
        artifact("junit:junit"),
        "//tests/integration/java/com/github/bazel_contrib/target_determinator/label",
        "@bazel_tools//tools/java/runfiles",
    ],
)

java_import(
    name = "raw-bazel-diff-deploy-jar",
    jars = [
        "@bazel_diff//file",
    ],
)

java_binary(
    name = "bazel-diff",
    main_class = "com.bazel_diff.Main",
    runtime_deps = [":raw-bazel-diff-deploy-jar"],
)

java_test(
    name = "BazelDifferIntegrationTest",
    timeout = "long",
    srcs = [
        "BazelDifferIntegrationTest.java",
    ],
    data = [":bazel-differ-binary"],
    env_inherit = [
        "CC",
        "PATH",
    ],
    jvm_flags = [
        "-Dbazel_differ=$(rootpath :bazel-differ-binary)",
    ],
    tags = ["no-sandbox"],
    deps = [
        ":tests",
        ":util",
        artifact("com.google.guava:guava"),
        artifact("com.google.code.findbugs:jsr305"),
        artifact("junit:junit"),
        "//tests/integration/java/com/github/bazel_contrib/target_determinator/label",
    ],
)

java_test(
    name = "TargetDeterminatorIntegrationTest",
    timeout = "long",
    srcs = [
        "TargetDeterminatorIntegrationTest.java",
    ],
    data = ["//target-determinator"],
    env_inherit = ["CC"],
    jvm_flags = [
        "-Dtarget_determinator=$(rootpath //target-determinator)",
    ],
    shard_count = 3,
    tags = ["no-sandbox"],
    deps = [
        ":tests",
        ":util",
        artifact("com.google.guava:guava"),
        artifact("com.google.code.findbugs:jsr305"),
        artifact("junit:junit"),
        "//tests/integration/java/com/github/bazel_contrib/target_determinator/label",
    ],
)

java_test(
    name = "TargetDeterminatorSpecificFlagsTest",
    srcs = [
        "TargetDeterminatorSpecificFlagsTest.java",
    ],
    data = ["//target-determinator"],
    env_inherit = ["CC"],
    jvm_flags = [
        "-Dtarget_determinator=$(rootpath //target-determinator)",
    ],
    shard_count = 2,
    tags = ["no-sandbox"],
    deps = [
        ":tests",
        ":util",
        "//tests/integration/java/com/github/bazel_contrib/target_determinator/label",
        artifact("junit:junit"),
        artifact("org.eclipse.jgit:org.eclipse.jgit"),
        artifact("org.hamcrest:hamcrest-all"),
    ],
)

java_library(
    name = "tests",
    srcs = [
        "Tests.java",
    ],
    exports = [":util"],
    deps = [
        ":util",
        "//tests/integration/java/com/github/bazel_contrib/target_determinator/label",
        artifact("com.google.guava:guava"),
        artifact("org.eclipse.jgit:org.eclipse.jgit"),
        artifact("org.hamcrest:hamcrest-all"),
        artifact("junit:junit"),
    ],
)

java_library(
    name = "util",
    srcs = [
        "TargetComputationErrorException.java",
        "TargetDeterminator.java",
        "TestdataRepo.java",
        "Util.java",
    ],
    deps = [
        "//tests/integration/java/com/github/bazel_contrib/target_determinator/label",
        artifact("com.google.guava:guava"),
        artifact("org.eclipse.jgit:org.eclipse.jgit"),
        artifact("org.hamcrest:hamcrest-all"),
    ],
)

copy_file(
    name = "bazel-differ-binary",
    src = ":original-bazel-differ",
    out = "bazel-differ",
)

alias(
    name = "original-bazel-differ",
    actual = select({
        "//:linux_arm64": "@bazel_differ_linux_arm64//file",
        "//:linux_x86_64": "@bazel_differ_linux_x86_64//file",
        "//:macos_arm64": "@bazel_differ_darwin_arm64//file",
        "//:macos_x86_64": "@bazel_differ_darwin_x86_64//file",
    }),
)
